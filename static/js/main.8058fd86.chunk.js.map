{"version":3,"sources":["p2-homeworks/h5/style.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p1-main/m1-ui/u1-app/Junior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","dateTime","Date","className","classes","message","image","alt","src","avatar","chat","user","name","time","getHours","getMinutes","messageData","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","onChangeCallback","checkbox","HW4","text","setText","showAlert","alert","checked","setChecked","testOnChange","column","testSpanError","blue","disabled","Greeting","setNameCallback","addUser","totalUsers","inputClass","GreetingContainer","users","addUserCallback","setName","length","HW3","setUsers","newUser","v1","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","restValue","PreJunior","style","display","padding","Error404","SuperSelect","options","onChangeOption","mappedOptions","m","i","SuperRadio","o","arr","HW7","homeWorkReducer","action","payload","sort","age","initialPeople","HW8","people","setPeople","finalPeople","p","Junior","PATH","Routes","path","exact","render","to","Header","edit","setEdit","list","listNone","items","button","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.8058fd86.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"style_list__17raf\",\"listNone\":\"style_listNone__3RTtL\",\"items\":\"style_items__XegZy\",\"button\":\"style_button__1nDc9\",\"butto\":\"style_butto__3dD3S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__ho4EC\",\"image\":\"Message_image__3s-rm\",\"chat\":\"Message_chat__3yQVB\",\"user\":\"Message_user__WSpFf\",\"time\":\"Message_time__32Qfw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2Vi1_\",\"column\":\"HW4_column__FeS9-\",\"testSpanError\":\"HW4_testSpanError__1DPp9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3LbZw\",\"errorInput\":\"SuperInputText_errorInput__1AWL9\",\"error\":\"SuperInputText_error__3-F6B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1rk5E\",\"red\":\"SuperButton_red__mj3H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2YkiI\",\"spanClassName\":\"SuperCheckbox_spanClassName__3bOh8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__avCCK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1HXvM\",\"error\":\"Greeting_error__3ye12\"};","import React from 'react'\r\nimport classes from './Message.module.css'\r\n\r\ntype typeMessage = {\r\n    avatar: string\r\n    time: string\r\n    name: string\r\n    message: string\r\n}\r\n\r\n\r\nfunction Message(props: typeMessage) {\r\n    let dateTime = new Date()\r\n\r\n    return (\r\n        <div className={classes.message}>\r\n            <img className={classes.image} alt='image' src={props.avatar}/>\r\n            <div className={classes.chat}>\r\n                <span className={classes.user}>{props.name}</span>\r\n                <p>{props.message}</p>\r\n                <span className={classes.time}> {`${dateTime.getHours()}:${dateTime.getMinutes()}`}  </span>\r\n            </div>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n\r\n}\r\n\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => props.deleteAffairCallback(props.affair._id)\r\n\r\n    return (\r\n        <div>\r\n            {props.affair.name}\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data:  Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\n\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => props.setFilter('all') // need to fix\r\n    const setHigh = () => props.setFilter('high')\r\n    const setMiddle = () => props.setFilter('middle')\r\n    const setLow = () => props.setFilter('low')\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high' // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\n\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nlet defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n\r\n    else if (filter === 'high') {\r\n        return  affairs.filter(f => f.priority=== 'high' )\r\n    }\r\n    else if (filter === 'low') {\r\n        return  affairs.filter(f => f.priority=== 'low' )\r\n    }\r\n    else if (filter === 'middle') {\r\n        return  affairs.filter(f => f.priority=== 'middle' )\r\n    }\r\n\r\n    return  affairs\r\n}\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(f => f._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n        onChangeCallback,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? 'complete' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                   className={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    onChangeCallback={testOnChange}\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChangeCallback={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void// need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = s.error // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\r\n            <span>{error}</span>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback, ...props}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value) // need to fix\r\n    }\r\n\r\n    const addUser = () => {\r\n           // alert(`Hello  !`)\r\n        addUserCallback(name)\r\n    }\r\n\r\n    const totalUsers = users.length\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport { v1 } from 'uuid'\r\nimport GreetingContainer from './GreetingContainer'\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string | number // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3(props: UserType) {\r\n    const [users, setUsers] = useState<Array<UserType>>( []) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => {\r\n        // need to fix any\r\n        const newUser = {_id: v1(), name}\r\n        setUsers([newUser, ...users]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes,KeyboardEvent, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode() // выключить editMode при нажатии Enter\r\n        setEditMode(false)\r\n        onEnter && onEnter()\r\n    }\r\n\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\r\n        setEditMode(false)\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode() // включить editMode при двойном клике\r\n        setEditMode(true)\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n\r\n    const restore = () => {\r\n        const restValue = restoreState<string>('editable-span-value', '')\r\n        setValue(restValue)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW3 from \"../../h3/HW3\";\r\nimport {v1} from \"uuid\";\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n\r\n    const container = {\r\n        display: 'block',\r\n        padding: '20px'\r\n\r\n    }\r\n    return (\r\n        <div style={container}>\r\n\r\n            <div><HW1/>\r\n                <HW2/>\r\n                <HW3 _id={v1()} name={'some'}/>\r\n                <HW4/>\r\n                <HW6/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        let value = e.currentTarget.value\r\n         onChangeOption?.(value)\r\n                // onChange, onChangeOption\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((m, i) => <option value={m} key={i}>{m}</option> ) : []\r\n\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value\r\n        onChangeOption?.(value)\r\n        // onChange, onChangeOption\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                name={name}\r\n                checked={value === o}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import {UserTypes} from \"../HW8\";\r\n\r\n\r\nexport const homeWorkReducer = (state: UserTypes[], action: HomeWorkReducerActionType): UserTypes[] => { // need to fix any\r\n    switch (action.type) {\r\n        case 'sort': {\r\n            if(action.payload === 'up'){\r\n                return state.sort()\r\n            }\r\n            if(action.payload === 'down'){\r\n                return state.sort()\r\n            }\r\n            return state\r\n\r\n        }\r\n\r\n        case 'check': {\r\n            // need to fix\r\n            return state.filter(f => f.age > 18)\r\n        }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport type HomeWorkReducerActionType = SortUpACType | CheckACType  ;\r\n\r\ntype SortUpACType = {\r\n    type: 'sort',\r\n    payload: string\r\n}\r\ntype CheckACType = {\r\n    type: 'check'\r\n    payload: string | number\r\n}\r\n","import React, {useState} from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {homeWorkReducer} from \"./bll/homeWorkReducer\";\r\n\r\nexport type UserTypes = {\r\n    _id: number\r\n    name: string\r\n    age: number\r\n}\r\n\r\nconst initialPeople: Array<UserTypes> = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState<Array<UserTypes>>(initialPeople) // need to fix any\r\n\r\n    // need to fix any\r\n    const finalPeople = people.map((p: UserTypes) => (\r\n        <div key={p._id}>\r\n            {p.name}, {p.age}\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}))\r\n    const sortDw = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'down'}))\r\n    const check = () => setPeople(homeWorkReducer(initialPeople, {type: 'check', payload: 'check'}))\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n            {finalPeople}\r\n\r\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\r\n            <div onClick={sortDw}>sort down</div>\r\n            <div onClick={check}>check 18</div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW8\r\n","import React from 'react';\r\nimport HW7 from \"../../../p2-homeworks/h7/HW7\";\r\nimport HW8 from \"../../../p2-homeworks/h8/HW8\";\r\n\r\nconst Junior = () => {\r\n    return (\r\n        <div>\r\n            <HW7 />\r\n            <HW8 />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Junior;","import React from 'react'\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"../../p1-main/m1-ui/u1-app/Junior\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    NOT_FOUND: '/error-404',\r\n    JUNIOR: '/junior'\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                // add routes\r\n\r\n                <Route path={PATH.JUNIOR} render={() => <Junior />}/>\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route path={PATH.NOT_FOUND} render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React, {useState} from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport classes from './style.module.css'\r\nimport {PATH} from \"./Routes\";\r\n\r\nfunction Header() {\r\n    let [edit, setEdit] = useState(false)\r\n\r\n    return (\r\n        <div className={classes.list}>\r\n\r\n            <div className={edit ? classes.list : classes.listNone}>\r\n                <NavLink to={PATH.PRE_JUNIOR} className={classes.items}>PreJunior</NavLink>\r\n                <NavLink to={PATH.JUNIOR} className={classes.items}>Junior</NavLink>\r\n                <NavLink to={PATH.NOT_FOUND} className={classes.items}>Junior+</NavLink>\r\n            </div>\r\n\r\n            <button className={classes.button} onClick={() =>setEdit(!edit)}>+</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    const containerHWFive = {\r\n        padding: '20px'\r\n    }\r\n\r\n    return (\r\n        <div style={containerHWFive}>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport {v1} from \"uuid\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:)</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3 _id={v1()} name={'some'} />*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}